<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Upgrade | Learn Elixir Language]]></title>
  <link href="http://learnelixir.com/blog/categories/upgrade/atom.xml" rel="self"/>
  <link href="http://learnelixir.com/"/>
  <updated>2014-12-01T20:42:56+08:00</updated>
  <id>http://learnelixir.com/</id>
  <author>
    <name><![CDATA[Learn Elixir]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Migrating Applications From Phoenix 0.5.0 to Phoenix 0.6.0]]></title>
    <link href="http://learnelixir.com/blog/2014/11/27/migrating-applications-from-phoenix-0-dot-5-0-to-phoenix-0-dot-6-0/"/>
    <updated>2014-11-27T22:06:05+08:00</updated>
    <id>http://learnelixir.com/blog/2014/11/27/migrating-applications-from-phoenix-0-dot-5-0-to-phoenix-0-dot-6-0</id>
    <content type="html"><![CDATA[<p>Phoenix 0.6.0 was released few days ago and it has increase requirement to only be supported by Elixir 1.0.2+. So before you start upgrading, you will need to make sure you have Elixir 1.0.2+ installed on your machine. There are also some note worthy backward incompatibility with Phoenix 0.5.0 that we would need to take care of. We will go through the details of those.</p>

<p>The source code for the Phoenix application after upgrade to 0.6.0, which I applied inside this article is available at:</p>

<p><a href="https://github.com/learnelixir/hardware-zone/tree/phoenix-0.6.0">https://github.com/learnelixir/hardware-zone/tree/phoenix-0.6.0</a></p>

<!--more-->

<p>To start, you will need to branch your application another branch, say phoenix-0.6.0:</p>
<div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>git checkout -b phoenix 0.6.0
</code></pre></div>
<h3>Before upgrading</h3>

<p>Before we start any upgrading, it&#39;s important to note that Phoenix 0.6.0 will only run on Elixir 1.0.2 and it&#39;s not compatible with Elixir 1.0.1 and below. Hence you will need to upgrade your Elixir to 1.0.2 first if you have not done so. On your Mac, you can simply run the brew update and brew install command like followings:</p>
<div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>brew updatea
<span class="nv">$ </span>brew unlink elixir
<span class="nv">$ </span>brew install elixir
</code></pre></div>
<p>On Ubuntu server, you can refer to this updated article - <a href="http://learnelixir.com/blog/2014/10/16/deploy-phoenix-application-to-a-ubuntu-server/">http://learnelixir.com/blog/2014/10/16/deploy-phoenix-application-to-a-ubuntu-server/</a> - Step Number 4 on how to bring up your Elixir to version 1.0.2</p>

<h3>Upgrading to Phoenix 0.6.0</h3>

<p>You will need to delete your Phoenix source folder and install the latest one by typing the following command on your terminal. This way, next time, when you generate a new Phoenix application, it will use Phoenix 0.6.0:</p>
<div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>git clone https://github.com/phoenixframework/phoenix.git <span class="o">&amp;&amp;</span> <span class="se">\</span>
  <span class="nb">cd </span>phoenix <span class="o">&amp;&amp;</span> <span class="se">\</span>
  git checkout v0.6.0 <span class="o">&amp;&amp;</span> <span class="se">\</span>
  mix <span class="k">do</span> deps.get, compile
</code></pre></div>
<h3>Upgrading application running Phoenix 0.5.0 to Phoenix 0.6.0</h3>

<p>Now enter the application folder that are still running Phoenix 0.5.0. For my case, I will upgrade the hardware zone app described in the <a href="http://learnelixir.com/blog/2014/10/18/seven-restful-actions-in-phoenix-web-app/">Seven RESTful Actions in Phoenix Web App</a>.</p>
<div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span><span class="nb">cd</span> ~/learn/elixir/hardware_zone
</code></pre></div>
<h4>Step 1 - Change Phoenix version to 0.6.0 in mix.exs</h4>

<p>Open <code>mix.exs</code> file:</p>
<div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>vim mix.exs
</code></pre></div>
<ul>
<li>On <code>def project</code> function, make sure your elixir is using <code>~&gt; 1.0.0</code>. </li>
<li>On <code>defp deps</code> function, make sure phoenix version is now <code>0.6.0</code>.</li>
</ul>
<div class="highlight"><pre><code class="language-elixir" data-lang="elixir"><span class="kd">defp</span> <span class="n">deps</span> <span class="k">do</span>
  <span class="p">[</span>   
    <span class="p">{</span><span class="ss">:phoenix</span><span class="p">,</span> <span class="s2">&quot;0.6.0&quot;</span><span class="p">},</span>
    <span class="p">{</span><span class="ss">:cowboy</span><span class="p">,</span> <span class="s2">&quot;~&gt; 1.0.0&quot;</span><span class="p">},</span>
    <span class="p">{</span><span class="ss">:postgrex</span><span class="p">,</span> <span class="s2">&quot;~&gt; 0.5&quot;</span><span class="p">},</span>
    <span class="p">{</span><span class="ss">:ecto</span><span class="p">,</span> <span class="s2">&quot;~&gt; 0.2.0&quot;</span><span class="p">},</span>
    <span class="p">{</span><span class="ss">:inflex</span><span class="p">,</span> <span class="s2">&quot;~&gt; 0.2.5&quot;</span><span class="p">},</span>
    <span class="p">{</span><span class="ss">:mogrify</span><span class="p">,</span> <span class="s2">&quot;~&gt; 0.1&quot;</span><span class="p">}</span>
  <span class="p">]</span>   
<span class="k">end</span>
</code></pre></div>
<p>After that, run <code>deps.get, compile</code>:</p>
<div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>mix <span class="k">do</span> deps.get, compile
</code></pre></div>
<h4>Step 2 - Upgrade Controller Files:</h4>

<p>From Phoenix 0.6.0 onwards, we will need to supply an extension to the string template name. For example, we used to be able to do like following in phoenix 0.5.0 inside our controllers:</p>
<div class="highlight"><pre><code class="language-elixir" data-lang="elixir"><span class="n">render</span> <span class="n">conn</span><span class="p">,</span> <span class="s2">&quot;index&quot;</span>
</code></pre></div>
<p>But now with Phoenix 0.6.0, we will need to use <code>index.html</code> if we want to render using <code>index.html.eex</code> file. With this, you can go to all the render command, and add in the extension. For my case, I will need to add in <code>.html</code> for all the template strings.</p>

<p>Another change in Phoenix 0.6.0 is <code>redirect</code> function, you will need to use <code>to</code> for the url string that you would like to redirect to. For instance, on Phoenix 0.5.0, we can write:</p>
<div class="highlight"><pre><code class="language-elixir" data-lang="elixir"><span class="n">redirect</span> <span class="n">conn</span><span class="p">,</span> <span class="n">hardwares_path</span><span class="p">(</span><span class="ss">:index</span><span class="p">)</span>
</code></pre></div>
<p>But for Phoenix 0.6.0, we will need to write:</p>
<div class="highlight"><pre><code class="language-elixir" data-lang="elixir"><span class="n">redirect</span> <span class="n">conn</span><span class="p">,</span> <span class="ss">to</span><span class="p">:</span> <span class="n">hardwares_path</span><span class="p">(</span><span class="ss">:index</span><span class="p">)</span>
</code></pre></div>
<p>That&#39;s all for controller upgrade.</p>

<h4>Step 3 - Upgrade Router file:</h4>

<p>You will need to add in the following codes under <code>use Phoenix.Router</code> line inside <code>web/router</code></p>
<div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>vim web/router.ex
</code></pre></div>
<p>And add in these lines</p>
<div class="highlight"><pre><code class="language-elixir" data-lang="elixir"><span class="n">pipeline</span> <span class="ss">:browser</span> <span class="k">do</span>
  <span class="n">plug</span> <span class="ss">:accepts</span><span class="p">,</span> <span class="sx">~w(html)</span>
  <span class="n">plug</span> <span class="ss">:fetch_session</span>
<span class="k">end</span> 

<span class="n">pipeline</span> <span class="ss">:api</span> <span class="k">do</span>
  <span class="n">plug</span> <span class="ss">:accepts</span><span class="p">,</span> <span class="sx">~w(json)</span>
<span class="k">end</span>
</code></pre></div>
<p>That&#39;s all for router upgrade.</p>

<h4>Step 4 - Change view files:</h4>

<p>We will need to rename file <code>web/views.ex</code> to <code>web/view.ex</code> (without <code>s</code> in <code>view</code>) and replace the content of this new <code>web/view.ex</code> with the followings. Please note that you will need to update the Module name for your particular project:</p>
<div class="highlight"><pre><code class="language-elixir" data-lang="elixir"><span class="kd">defmodule</span> <span class="nc">HardwareZone.View</span> <span class="k">do</span>
  <span class="kn">use</span> <span class="nc">Phoenix.View</span><span class="p">,</span> <span class="ss">root</span><span class="p">:</span> <span class="s2">&quot;web/templates&quot;</span>

  <span class="c1"># The quoted expression returned by this block is applied</span>
  <span class="c1"># to this module and all other views that use this module.</span>
  <span class="n">using</span> <span class="k">do</span>
    <span class="k">quote</span> <span class="k">do</span>
      <span class="c1"># Import common functionality</span>
      <span class="kn">import</span> <span class="nc">HardwareZone.I</span><span class="mi">18</span><span class="n">n</span>
      <span class="kn">import</span> <span class="nc">HardwareZone.Router.Helpers</span>

      <span class="c1"># Use Phoenix.HTML to import all HTML functions (forms, tags, etc)</span>
      <span class="kn">use</span> <span class="nc">Phoenix.HTML</span>

      <span class="c1"># Common aliases</span>
      <span class="kn">alias</span> <span class="nc">Phoenix.Controller.Flash</span>
    <span class="k">end</span>
  <span class="k">end</span>

  <span class="c1"># Functions defined here are available to all other views/templates</span>
<span class="k">end</span>
</code></pre></div>
<p>As you can see, the module name now is <code>HardwareZone.View</code> instead of <code>HardwareZone.Views</code> like before because of the file name changed. Since this module name is changed, we will need to update all the view files in side our <code>web/views</code> folder to reflect this change as well. You would need to remove the <code>s</code> character in all the <code>use</code> function call in all the view. For instance, my <code>web/views/hardwares_view.ex</code> file will now look like this:</p>
<div class="highlight"><pre><code class="language-elixir" data-lang="elixir"><span class="kd">defmodule</span> <span class="nc">HardwareZone.HardwaresView</span> <span class="k">do</span>
  <span class="kn">use</span> <span class="nc">HardwareZone.View</span>
<span class="k">end</span>
</code></pre></div>
<p>That&#39;s all for upgrading views and that&#39;s all for upgrading to Phoenix 0.6.0.</p>

<h3>Conclusion</h3>

<p>It is quite a minor upgrade from Phoenix from 0.5.0 to 0.6.0 but there are also quite a bit of changes that we will need to take care of. I hope that you will always keep updating and support the latest Phoenix framework :-). If you want to see all the code changes for this particular project, you can use this link <a href="https://github.com/learnelixir/hardware-zone/commit/3b4f9a0e3022b622a301846cbb3d72e14dd9e81a">https://github.com/learnelixir/hardware-zone/commit/3b4f9a0e3022b622a301846cbb3d72e14dd9e81a</a>. It will show all the code changes when I did the update from Phoenix 0.5.0 to Phoenix 0.6.0 for this Hardware Zone app. Hope you enjoy the upgrading.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Migrating Applications From Phoenix 0.4.1 to Phoenix 0.5.0]]></title>
    <link href="http://learnelixir.com/blog/2014/10/29/migrating-applications-from-phoenix-0-dot-4-1-to-phoenix-0-dot-5-0/"/>
    <updated>2014-10-29T06:16:12+08:00</updated>
    <id>http://learnelixir.com/blog/2014/10/29/migrating-applications-from-phoenix-0-dot-4-1-to-phoenix-0-dot-5-0</id>
    <content type="html"><![CDATA[<p>Phoenix 0.5.0 was released 2 weeks ago and it was a great release with bug fixes and a lot enhancements, performance tweaks. If you are running your application on Phoenix 0.4.1, it&#39;s now a good time to upgrade your app to utilise the speed of Phoenix 0.5.0. Besides those, there are some backward incompatible changes which may break your app that you should watch out when you upgrade to Phoenix 0.5.0. In this article, we are going to go through in details how to upgrade a Phoenix 0.4.0 application to a Phoenix 0.5.0.</p>

<p>The source code for the Phoenix application after upgrade to 0.5.0, which I applied inside this article is available at:</p>

<p><a href="https://github.com/learnelixir/hardware-zone/tree/phoenix-0.5.0">https://github.com/learnelixir/hardware-zone/tree/phoenix-0.5.0</a></p>

<!--more-->

<p>To start, you will need to branch your application to another branch called phoenix-0.5.0:</p>
<div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>git checkout -b phoenix-0.5.0
</code></pre></div>
<h3>Before upgrading</h3>

<p>Before we start any upgrading, it&#39;s important to note that Phoenix 0.5.0 will only run on Elixir 1.0.1 and it&#39;s not compatible with Elixir 1.0.0. Hence you will need to upgrade your Elixir to 1.0.1 first if you have not done so. On your Mac, you can simply run the <code>brew install</code> command:</p>
<div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>brew install elixir
</code></pre></div>
<p>On Ubuntu server, you can refer to this updated article - http://learnelixir.com/blog/2014/10/16/deploy-phoenix-application-to-a-ubuntu-server/ - <strong>Step Number 4</strong> on how to bring up your Elixir to version 1.0.1</p>

<h3>Upgrading to Phoenix 0.5.0</h3>

<p>You will need to delete your Phoenix source folder and install the latest one by typing the following command on your terminal. This way, next time, when you generate a new Phoenix application, it will Phoenix 0.5.0:</p>
<div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>git clone https://github.com/phoenixframework/phoenix.git <span class="o">&amp;&amp;</span> <span class="se">\</span>
  <span class="nb">cd </span>phoenix <span class="o">&amp;&amp;</span> <span class="se">\</span>
  git checkout v0.5.0 <span class="o">&amp;&amp;</span> <span class="se">\</span>
  mix <span class="k">do</span> deps.get, compile
</code></pre></div>
<h3>Upgrading application running Phoenix 0.4.1 to Phoenix 0.5.0</h3>

<p>Now enter the application folder that are still running Phoenix 0.4.1. For my case, I will upgrade the hardware zone app described in the <a href="http://learnelixir.com/blog/2014/10/18/seven-restful-actions-in-phoenix-web-app/">Seven RESTful Actions in Phoenix Web App</a>.</p>
<div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span><span class="nb">cd</span> ~/learn/elixir/hardware_zone
</code></pre></div>
<p>And then follow the following steps:</p>

<h4>Step 1 - Change Phoenix version to 0.5.0 in <code>mix.exs</code></h4>

<p>Open <code>mix.exs</code> file:</p>
<div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>vim mix.exs
</code></pre></div>
<p>On <code>def project</code> function, make sure your <code>elixir</code> is using <code>~&gt; 1.0.0</code>. You will also need to add in the <code>compilers</code> line below <code>elixrc_paths</code> line as following:</p>
<div class="highlight"><pre><code class="language-elixir" data-lang="elixir"><span class="kd">def</span> <span class="n">project</span> <span class="k">do</span>
  <span class="p">[</span> <span class="ss">app</span><span class="p">:</span> <span class="ss">:hardware_zone</span><span class="p">,</span>
    <span class="ss">version</span><span class="p">:</span> <span class="s2">&quot;0.0.1&quot;</span><span class="p">,</span>
    <span class="ss">elixir</span><span class="p">:</span> <span class="s2">&quot;~&gt; 1.0.0&quot;</span><span class="p">,</span>
    <span class="ss">elixirc_paths</span><span class="p">:</span> <span class="p">[</span><span class="s2">&quot;lib&quot;</span><span class="p">,</span> <span class="s2">&quot;web&quot;</span><span class="p">],</span>
    <span class="ss">compilers</span><span class="p">:</span> <span class="p">[</span><span class="ss">:phoenix</span><span class="p">]</span> <span class="o">++</span> <span class="nc">Mix</span><span class="p">.</span><span class="n">compilers</span><span class="p">,</span>
    <span class="ss">deps</span><span class="p">:</span> <span class="n">deps</span> <span class="p">]</span>
<span class="k">end</span>
</code></pre></div>
<p>On <code>defp deps</code> function, make sure <code>phoenix</code> version is now <code>0.5.0</code>.</p>
<div class="highlight"><pre><code class="language-elixir" data-lang="elixir"><span class="kd">defp</span> <span class="n">deps</span> <span class="k">do</span>
  <span class="p">[</span>
    <span class="p">{</span><span class="ss">:phoenix</span><span class="p">,</span> <span class="s2">&quot;0.5.0&quot;</span><span class="p">},</span>
    <span class="p">{</span><span class="ss">:cowboy</span><span class="p">,</span> <span class="s2">&quot;~&gt; 1.0.0&quot;</span><span class="p">},</span>
    <span class="p">{</span><span class="ss">:postgrex</span><span class="p">,</span> <span class="s2">&quot;~&gt; 0.5&quot;</span><span class="p">},</span>
    <span class="p">{</span><span class="ss">:ecto</span><span class="p">,</span> <span class="s2">&quot;~&gt; 0.2.0&quot;</span><span class="p">},</span>
    <span class="p">{</span><span class="ss">:plug</span><span class="p">,</span> <span class="s2">&quot;~&gt; 0.8.1&quot;</span><span class="p">},</span>
    <span class="p">{</span><span class="ss">:mogrify</span><span class="p">,</span> <span class="s2">&quot;~&gt; 0.1&quot;</span><span class="p">}</span>
  <span class="p">]</span>
<span class="k">end</span>
</code></pre></div>
<p>After that, run <code>deps.get, compile</code>:</p>
<div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>mix <span class="k">do</span> deps.get, compile
</code></pre></div>
<h4>Step 2 - Upgrade config files</h4>

<p>There have a been a huge change in config files in config folder. Those files are <code>config.exs</code>, <code>def.exs</code>, <code>prod.exs</code> and <code>test.exs</code>. Let&#39;s look at them one by one</p>

<h5>config.exs</h5>

<p>Open <code>config.exs</code> file</p>
<div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>vim config/config.exs
</code></pre></div>
<p>Inside the function call <code>config :phoenix, HardwareZone.Router, ...</code>, you will need to change the lines for <code>port</code>, <code>ssl</code>, <code>static_assets</code>, <code>cookies</code>, <code>session_key</code> and <code>session_secret</code>:</p>

<ul>
<li>Line <code>port: System.get_env(&quot;PORT&quot;),</code> will need to change to <code>http: [port: System.get_env(&quot;PORT&quot;)],</code>.</li>
<li>Line <code>ssl: false,</code> will need to change to <code>https: false,</code>.</li>
<li>Line <code>cookies: true,</code> will need to be removed.</li>
<li>Line <code>session_key: &quot;_hardware_zone_key&quot;,</code> will need to be removed.</li>
<li>Line <code>session_secret: ...</code>, will need to change to <code>secret_key_base: ...</code></li>
</ul>

<p>Add line <code>url: [host: &quot;localhost&quot;],</code> to be right under <code>config :phoenix, HardwareZone.Router,</code> function call. </p>

<p>Effectively, the function call: <code>config :phoenix, HardwareZone.Router</code> will be like following after change:</p>
<div class="highlight"><pre><code class="language-elixir" data-lang="elixir"><span class="n">config</span> <span class="ss">:phoenix</span><span class="p">,</span> <span class="nc">HardwareZone.Router</span><span class="p">,</span>
  <span class="ss">url</span><span class="p">:</span> <span class="p">[</span><span class="ss">host</span><span class="p">:</span> <span class="s2">&quot;localhost&quot;</span><span class="p">],</span>
  <span class="ss">http</span><span class="p">:</span> <span class="p">[</span><span class="ss">port</span><span class="p">:</span> <span class="nc">System</span><span class="p">.</span><span class="n">get_env</span><span class="p">(</span><span class="s2">&quot;PORT&quot;</span><span class="p">)],</span>
  <span class="ss">https</span><span class="p">:</span> <span class="no">false</span><span class="p">,</span>
  <span class="ss">secret_key_base</span><span class="p">:</span> <span class="s2">&quot;oXLywfYvLeqUBlTmg2ly4HL64UpJycMiwqG2OlN95TM30AwXqXEFb...&quot;</span><span class="p">,</span>
  <span class="ss">catch_errors</span><span class="p">:</span> <span class="no">true</span><span class="p">,</span>
  <span class="ss">debug_errors</span><span class="p">:</span> <span class="no">false</span><span class="p">,</span>
  <span class="ss">error_controller</span><span class="p">:</span> <span class="nc">HardwareZone.PageController</span>
</code></pre></div>
<p>You will also need to remove the entire function call:</p>
<div class="highlight"><pre><code class="language-elixir" data-lang="elixir"><span class="n">config</span> <span class="ss">:phoenix</span><span class="p">,</span> <span class="ss">:code_reloader</span><span class="p">,</span>
  <span class="ss">enabled</span><span class="p">:</span> <span class="no">false</span>
</code></pre></div>
<p>And add in the following. Note that you will need to change the key name according to the project&#39;s name:</p>
<div class="highlight"><pre><code class="language-elixir" data-lang="elixir"><span class="n">config</span> <span class="ss">:phoenix</span><span class="p">,</span> <span class="nc">HardwareZone.Router</span><span class="p">,</span>
  <span class="ss">session</span><span class="p">:</span> <span class="p">[</span><span class="ss">store</span><span class="p">:</span> <span class="ss">:cookie</span><span class="p">,</span>
            <span class="ss">key</span><span class="p">:</span> <span class="s2">&quot;_hardware_zone_key&quot;</span><span class="p">]</span>
</code></pre></div>
<p>That&#39;s all for <code>config.exs</code>. Let&#39;s move on to <code>dev.exs</code></p>

<h5>dev.exs</h5>

<p>Open <code>dev.exs</code> file:</p>
<div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>vim config/dev.exs
</code></pre></div>
<p>Under <code>config :phoenix, HardwareZone.Router,</code> call you will need to remove the following lines:</p>
<div class="highlight"><pre><code class="language-elixir" data-lang="elixir"><span class="ss">port</span><span class="p">:</span> <span class="nc">System</span><span class="p">.</span><span class="n">get_env</span><span class="p">(</span><span class="s2">&quot;PORT&quot;</span><span class="p">)</span> <span class="o">||</span> <span class="mi">4000</span><span class="p">,</span>
<span class="ss">ssl</span><span class="p">:</span> <span class="no">false</span><span class="p">,</span>
<span class="ss">host</span><span class="p">:</span> <span class="s2">&quot;localhost&quot;</span><span class="p">,</span>
<span class="ss">cookies</span><span class="p">:</span> <span class="no">true</span><span class="p">,</span>
<span class="ss">session_key</span><span class="p">:</span> <span class="s2">&quot;_hardware_zone_key&quot;</span><span class="p">,</span>
<span class="ss">session_secret</span><span class="p">:</span> <span class="s2">&quot;VQP)JU1Z7*5L+^09X*L=6RKN9R1HL0O2E7^(1B%V3W64Z7@J9^7(M&amp;TXW8*C)...&quot;</span><span class="p">,</span>
</code></pre></div>
<p>and add in this line:</p>
<div class="highlight"><pre><code class="language-elixir" data-lang="elixir"><span class="ss">http</span><span class="p">:</span> <span class="p">[</span><span class="ss">port</span><span class="p">:</span> <span class="nc">System</span><span class="p">.</span><span class="n">get_env</span><span class="p">(</span><span class="s2">&quot;PORT&quot;</span><span class="p">)</span> <span class="o">||</span> <span class="mi">4000</span><span class="p">],</span>
</code></pre></div>
<p>Also, remove the following block of code:</p>
<div class="highlight"><pre><code class="language-elixir" data-lang="elixir"><span class="n">config</span> <span class="ss">:phoenix</span><span class="p">,</span> <span class="ss">:code_reloader</span><span class="p">,</span>
  <span class="ss">enabled</span><span class="p">:</span> <span class="no">true</span>

<span class="n">config</span> <span class="ss">:logger</span><span class="p">,</span> <span class="ss">:console</span><span class="p">,</span>
  <span class="ss">level</span><span class="p">:</span> <span class="ss">:debug</span>
</code></pre></div>
<p>And add in the following line:</p>
<div class="highlight"><pre><code class="language-elixir" data-lang="elixir"><span class="n">config</span> <span class="ss">:phoenix</span><span class="p">,</span> <span class="ss">:code_reloader</span><span class="p">,</span> <span class="no">true</span>
</code></pre></div>
<p>Effectively, for my case, it will look like following after these changes have been  made:</p>
<div class="highlight"><pre><code class="language-elixir" data-lang="elixir"><span class="kn">use</span> <span class="nc">Mix.Config</span>

<span class="n">config</span> <span class="ss">:phoenix</span><span class="p">,</span> <span class="nc">HardwareZone.Router</span><span class="p">,</span>
  <span class="ss">http</span><span class="p">:</span> <span class="p">[</span><span class="ss">port</span><span class="p">:</span> <span class="nc">System</span><span class="p">.</span><span class="n">get_env</span><span class="p">(</span><span class="s2">&quot;PORT&quot;</span><span class="p">)</span> <span class="o">||</span> <span class="mi">4000</span><span class="p">],</span>
  <span class="ss">debug_errors</span><span class="p">:</span> <span class="no">true</span>

<span class="c1"># Enables code reloading for development</span>
<span class="n">config</span> <span class="ss">:phoenix</span><span class="p">,</span> <span class="ss">:code_reloader</span><span class="p">,</span> <span class="no">true</span>
</code></pre></div>
<p>Let&#39;s move on to <code>prod.exs</code></p>

<h5>prod.exs</h5>

<p>Open <code>prod.exs</code> file:</p>
<div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>vim config/prod.exs
</code></pre></div>
<p>under the function call <code>config :phoenix, HardwareZone.Router,</code>, you will also need to remove the block of code:</p>
<div class="highlight"><pre><code class="language-elixir" data-lang="elixir"><span class="ss">port</span><span class="p">:</span> <span class="nc">System</span><span class="p">.</span><span class="n">get_env</span><span class="p">(</span><span class="s2">&quot;PORT&quot;</span><span class="p">)</span> <span class="o">||</span> <span class="mi">4000</span><span class="p">,</span>
<span class="ss">ssl</span><span class="p">:</span> <span class="no">false</span><span class="p">,</span>
<span class="ss">host</span><span class="p">:</span> <span class="s2">&quot;localhost&quot;</span><span class="p">,</span>
<span class="ss">cookies</span><span class="p">:</span> <span class="no">true</span><span class="p">,</span>
<span class="ss">session_key</span><span class="p">:</span> <span class="s2">&quot;_hardware_zone_key&quot;</span><span class="p">,</span>
<span class="ss">session_secret</span><span class="p">:</span> <span class="s2">&quot;VQP)JU1Z7*5L+^09X*L=6RKN9R1HL0O2E7^(1B%V3W64Z7@J9^7(M&amp;TXW8*C)I....&quot;</span><span class="p">,</span>
</code></pre></div>
<p>and replace by the following code. Note that the secret key is different per application, hence make sure you change it:</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">url: [host: &quot;estark-sands-7697.herokuapp.com&quot;],
http: [port: System.get_env(&quot;PORT&quot;)],
secret_key_base: &quot;oXLywfYvLeqUBlTmg2ly4HL64UpJycMiwqG2OlN95TM30AwXqXEFbwjAbD/tgnfDDNpqFeEc...&quot;
</code></pre></div>
<p>Under <code>config :logger, :console,</code> call, remove the line <code>metadata: [:request_id]</code>.</p>

<p>After all the <code>prod.exs</code> should look like below:</p>
<div class="highlight"><pre><code class="language-elixir" data-lang="elixir"><span class="kn">use</span> <span class="nc">Mix.Config</span>

<span class="n">config</span> <span class="ss">:phoenix</span><span class="p">,</span> <span class="nc">HardwareZone.Router</span><span class="p">,</span>
  <span class="ss">url</span><span class="p">:</span> <span class="p">[</span><span class="ss">host</span><span class="p">:</span> <span class="s2">&quot;estark-sands-7697.herokuapp.com&quot;</span><span class="p">],</span>
  <span class="ss">http</span><span class="p">:</span> <span class="p">[</span><span class="ss">port</span><span class="p">:</span> <span class="nc">System</span><span class="p">.</span><span class="n">get_env</span><span class="p">(</span><span class="s2">&quot;PORT&quot;</span><span class="p">)],</span>
  <span class="ss">secret_key_base</span><span class="p">:</span> <span class="s2">&quot;oXLywfYvLeqUBlTmg2ly4HL64UpJycMiwqG2OlN95TM30AwXqXEFbwjAbD/tgnfDDNpq....&quot;</span>

<span class="n">config</span> <span class="ss">:logger</span><span class="p">,</span> <span class="ss">:console</span><span class="p">,</span>
  <span class="ss">level</span><span class="p">:</span> <span class="ss">:info</span>
</code></pre></div>
<p>Now, let&#39;s move on to <code>prod/test.exs</code>:</p>

<h5>test.exs</h5>

<p>Open <code>test.exs</code> file:</p>
<div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>vim config/test.exs
</code></pre></div>
<p>under the function call <code>config :phoenix, HardwareZone.Router,</code>, you will also need to remove the block of code:</p>
<div class="highlight"><pre><code class="language-elixir" data-lang="elixir"><span class="ss">port</span><span class="p">:</span> <span class="nc">System</span><span class="p">.</span><span class="n">get_env</span><span class="p">(</span><span class="s2">&quot;PORT&quot;</span><span class="p">)</span> <span class="o">||</span> <span class="mi">4000</span><span class="p">,</span>
<span class="ss">ssl</span><span class="p">:</span> <span class="no">false</span><span class="p">,</span>
<span class="ss">host</span><span class="p">:</span> <span class="s2">&quot;localhost&quot;</span><span class="p">,</span>
<span class="ss">cookies</span><span class="p">:</span> <span class="no">true</span><span class="p">,</span>
<span class="ss">session_key</span><span class="p">:</span> <span class="s2">&quot;_hardware_zone_key&quot;</span><span class="p">,</span>
<span class="ss">session_secret</span><span class="p">:</span> <span class="s2">&quot;VQP)JU1Z7*5L+^09X*L=6RKN9R1HL0O2E7^(1B%V3W64Z7@J9^7(M&amp;TXW8*C)I....&quot;</span><span class="p">,</span>
</code></pre></div>
<p>and replace by:</p>
<div class="highlight"><pre><code class="language-elixir" data-lang="elixir"><span class="ss">http</span><span class="p">:</span> <span class="p">[</span><span class="ss">port</span><span class="p">:</span> <span class="nc">System</span><span class="p">.</span><span class="n">get_env</span><span class="p">(</span><span class="s2">&quot;PORT&quot;</span><span class="p">)</span> <span class="o">||</span> <span class="mi">4001</span><span class="p">],</span>
<span class="ss">catch_errors</span><span class="p">:</span> <span class="no">false</span>
</code></pre></div>
<p>You will also need to remove the 2 function calls:</p>
<div class="highlight"><pre><code class="language-elixir" data-lang="elixir"><span class="n">config</span> <span class="ss">:phoenix</span><span class="p">,</span> <span class="ss">:code_reloader</span><span class="p">,</span>
  <span class="ss">enabled</span><span class="p">:</span> <span class="no">true</span>

<span class="n">config</span> <span class="ss">:logger</span><span class="p">,</span> <span class="ss">:console</span><span class="p">,</span>
  <span class="ss">level</span><span class="p">:</span> <span class="ss">:debug</span>
</code></pre></div>
<p>Effectively, <code>test.exs</code> will look like following:</p>
<div class="highlight"><pre><code class="language-elixir" data-lang="elixir"><span class="kn">use</span> <span class="nc">Mix.Config</span>

<span class="n">config</span> <span class="ss">:phoenix</span><span class="p">,</span> <span class="nc">HardwareZone.Router</span><span class="p">,</span>
  <span class="ss">http</span><span class="p">:</span> <span class="p">[</span><span class="ss">port</span><span class="p">:</span> <span class="nc">System</span><span class="p">.</span><span class="n">get_env</span><span class="p">(</span><span class="s2">&quot;PORT&quot;</span><span class="p">)</span> <span class="o">||</span> <span class="mi">4001</span><span class="p">],</span>
  <span class="ss">catch_errors</span><span class="p">:</span> <span class="no">false</span>
</code></pre></div>
<p>That&#39;s all for config files. We can move on to the next one: <code>test/test_helper.exs</code></p>

<h4>Step 3 - <code>test/test_helper.exs</code></h4>

<p>Open <code>test/test_helper.exs</code>:</p>
<div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>vim <span class="nb">test</span>/test_helper.exs
</code></pre></div>
<p>and remove the top line:</p>
<div class="highlight"><pre><code class="language-elixir" data-lang="elixir"><span class="nc">Phoenix.CodeReloader</span><span class="p">.</span><span class="n">reload!</span>
</code></pre></div>
<h4>Step 4 - router.ex</h4>

<p>Open <code>router.ex</code>: </p>
<div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>vim web/router.ex
</code></pre></div>
<p>In this file, you will need to move all the current routes to be under <code>scope &quot;/&quot;</code>. This change is because in Phoenix 0.5.0 introduces pipeline DSL whereby a arrival request will be eventually dispatched to a desired end-point. More information can be found <a href="https://github.com/phoenixframework/phoenix/blob/bdd9a88324d7a95fd54ba0d9904f7ff304f019d0/lib/phoenix/router.ex#L113-L220">here</a>. Let&#39;s start by adding on the following</p>
<div class="highlight"><pre><code class="language-elixir" data-lang="elixir"><span class="n">scope</span> <span class="s2">&quot;/&quot;</span> <span class="k">do</span>
  <span class="n">pipe_through</span> <span class="ss">:browser</span>
  <span class="p">...</span>
<span class="k">end</span>
</code></pre></div>
<p>And then copy all your existing routes to the <code>...</code> position in the above code. For our Hardware Zone application, the end result is as following:</p>
<div class="highlight"><pre><code class="language-elixir" data-lang="elixir"><span class="n">scope</span> <span class="s2">&quot;/&quot;</span> <span class="k">do</span>
    <span class="n">pipe_through</span> <span class="ss">:browser</span>

    <span class="n">get</span> <span class="s2">&quot;/&quot;</span><span class="p">,</span> <span class="nc">HardwareZone.HardwaresController</span><span class="p">,</span> <span class="ss">:index</span><span class="p">,</span> <span class="ss">as</span><span class="p">:</span> <span class="ss">:root</span>
    <span class="n">resources</span> <span class="s2">&quot;/hardwares&quot;</span><span class="p">,</span> <span class="nc">HardwareZone.HardwaresController</span>
  <span class="k">end</span>
</code></pre></div>
<p>That&#39;s all for <code>router.ex</code>, let&#39;s move on to upgrade our controllers</p>

<h4>Step 5 - Controllers</h4>

<p>Open all your controllers and put in <code>plug :action</code> under your controller name, aka.</p>
<div class="highlight"><pre><code class="language-elixir" data-lang="elixir"><span class="kd">defmodule</span> <span class="nc">HardwareZone.HardwaresController</span> <span class="k">do</span>
  <span class="kn">use</span> <span class="nc">Phoenix.Controller</span>
  <span class="p">...</span>
  <span class="n">plug</span> <span class="ss">:action</span>

  <span class="kd">def</span> <span class="n">index</span><span class="p">(</span><span class="n">conn</span><span class="p">,</span> <span class="n">_params</span><span class="p">)</span> <span class="k">do</span>
    <span class="p">...</span>
  <span class="k">end</span>  
  <span class="p">...</span>
</code></pre></div>
<p>That&#39;s all for Controllers. Let&#39;s move on to view.</p>

<h4>Step 6 - Views</h4>

<p>You will need to open <code>web/views.ex</code> file</p>
<div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>vim web/views.ex
</code></pre></div>
<p>and add in the following line under the <code>import</code> <code>Router.Helpers</code> line:</p>
<div class="highlight"><pre><code class="language-elixir" data-lang="elixir"><span class="kn">alias</span> <span class="nc">Phoenix.Controller.Flash</span> 
</code></pre></div>
<p>There are no step 7 :-). Happy Upgrading.</p>

<h3>Wrap Up</h3>

<p>That&#39;s all how we migrate from Phoenix 0.4.1 to Phoenix 0.5.0. Please leave any comments if you find anyway better way. All your comments and questions are always welcomed. :-)</p>
]]></content>
  </entry>
  
</feed>
