<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Heroku | Learn Elixir Language]]></title>
  <link href="http://learnelixir.com/blog/categories/heroku/atom.xml" rel="self"/>
  <link href="http://learnelixir.com/"/>
  <updated>2014-11-27T22:55:49+08:00</updated>
  <id>http://learnelixir.com/</id>
  <author>
    <name><![CDATA[Learn Elixir]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Deploy Phonenix Application to Heroku]]></title>
    <link href="http://learnelixir.com/blog/2014/10/15/deploy-phonenix-application-to-heroku-server/"/>
    <updated>2014-10-15T23:16:00+08:00</updated>
    <id>http://learnelixir.com/blog/2014/10/15/deploy-phonenix-application-to-heroku-server</id>
    <content type="html"><![CDATA[<p><strong>UPDATE</strong> on 26th Nov 14: I have updated this article in order to work with Phoenix framework version 0.6.0. Previously the Phoenix framework used in this article was 0.5.0. The source code is available on the following git URL:</p>

<p><strong>UPDATE</strong> on 27th Oct 14: I have updated this article in order to work with Phoenix framework version 0.5.0. Previously the Phoenix framework used in this article was 0.4.1. The source code is available on the following git URL:</p>

<p><a href="https://github.com/learnelixir/phoenix-heroku">https://github.com/learnelixir/phoenix-heroku</a>
<hr/><br/>
Phoenix is a pretty cool web framework for Elixir. However, up to date, there are still very few resources on how to deploy a Phoenix application to a web server. I tried to google on how to deploy but could not find any tutorials that provide very clear and exact steps. Hence, in this article, let walkthrouh step by step how to do that with a heroku server.</p>

<!-- more -->

<h3>Create an awesome Phoenix application</h3>

<p>From phoenix installation folder, run the following command. You can name it any name as long as you remember to use the same app name in subsequent steps.</p>
<div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>mix phoenix.new phoenix-heroku ../
</code></pre></div>
<p>Enter this new application </p>
<div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span><span class="nb">cd</span> ../phoenix-heroku
</code></pre></div>
<p>Make sure your <code>mix.exs</code> has the following dependencies:</p>
<div class="highlight"><pre><code class="language-elixir" data-lang="elixir"><span class="kd">defp</span> <span class="n">deps</span> <span class="k">do</span>
  <span class="p">[{</span><span class="ss">:phoenix</span><span class="p">,</span> <span class="s2">&quot;0.6.0&quot;</span><span class="p">},</span>
   <span class="p">{</span><span class="ss">:cowboy</span><span class="p">,</span> <span class="s2">&quot;~&gt; 1.0&quot;</span><span class="p">}]</span>
<span class="k">end</span>
</code></pre></div>
<p>Now, install all the depenencies</p>
<div class="highlight"><pre><code class="language-bash" data-lang="bash">mix <span class="k">do</span> deps.get, compile
</code></pre></div>
<p>This is a miminal number of steps to setup a phoenix application. Eventually, you will need to add more code to build it up. Moving forward, let&#39;s deploy this application. </p>

<p>Here are the steps to deploy to Heroku server</p>

<h4>Step 1: Run git init</h4>

<p>Pretty straight forward. Just run this command in your application folder</p>
<div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>git init 
</code></pre></div>
<h4>Step 2: Create the heroku application</h4>

<p><strong>Note</strong>: You will need to change the heroku application name, which is in this post -  <code>phoenix-heroku-demo</code> to your application name.</p>
<div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>heroku create phoenix-heroku-demo
Creating phoenix-heroku-demo... <span class="k">done</span>, stack is cedar
http://phoenix-heroku-demo.herokuapp.com/ <span class="p">|</span> git@heroku.com:phoenix-heroku-demo.git
Git remote heroku added
</code></pre></div>
<p>After this command, Heroku will provide me a URL for my heroku app. But there is nothing there yet. Also, do note down the name, we will use it later. Mine is <code>phoenix-heroku-demo</code>. Let&#39;s move to next step</p>

<h4>Step 3: Add buildback to your app</h4>

<p>Run a heroku config:set command as following</p>
<div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>heroku config:set <span class="se">\ </span>
<span class="nv">BUILDPACK_URL</span><span class="o">=</span>https://github.com/HashNuke/heroku-buildpack-elixir.git -a phoenix-heroku-demo 
</code></pre></div>
<h4>Step 4: Set mix environment config</h4>

<p>You can choose to set mix environment to be staging or production at this step. Here I choose to run my app using production environment:</p>
<div class="highlight"><pre><code class="language-bash" data-lang="bash">heroku config:set <span class="nv">MIX_ENV</span><span class="o">=</span>prod
</code></pre></div>
<p>After this, you will need to modify some of the config file in this Phoenix application. Let&#39;s move to step 5</p>

<h4>Step 5: Edit Procfile</h4>

<p>Create file <code>Procfile</code> inside the root of your application folder with the following content</p>
<div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>web: yes <span class="p">|</span> mix compile.protocols <span class="o">&amp;&amp;</span> elixir -pa _build/prod/consolidated -S mix phoenix.start 
</code></pre></div>
<p>If in step 4, you have specified staging environment, you will need to use the folder <code>_build/staging/consolidated</code> for the <code>-pa</code> option here. </p>

<h4>Step 6: Edit elixir_buildpack.config</h4>

<p>Create file <code>elixir_buildpack.config</code> inside the root of your application folder with the following content. Note that we will need to use Elixir 1.0.1 here as the Phoenix build at the point that I wrote this article requires that.</p>
<div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">erlang_version</span><span class="o">=</span>17.2
<span class="nv">elixir_version</span><span class="o">=</span>1.0.2
<span class="nv">always_rebuild</span><span class="o">=</span><span class="nb">true</span>
</code></pre></div>
<h4>Step 7: Commit everything and push</h4>
<div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>git add . <span class="o">&amp;&amp;</span> git commit -am <span class="s2">&quot;initial commit&quot;</span>
<span class="nv">$ </span>git push heroku master
</code></pre></div>
<p>It can be quite slow in this first time pushing to heroku master as there is a need to compile all the elixir depenencies on Heroku server, but subsequently it will be quite fast. Now I go to <code>http://phoenix-heroku-demo.herokuapp.com/</code> and hooray the phoenix home page is there</p>

<p><img class="center" src="/images/deploy<em>app</em>to_server/heroku.png&#8221; width=&#8221;800&#8221; height=&#8221;509&#8221; title=&#8221;&#39;image&#39; &#39;images&#39;&#8221; ></p>

<p>In subsequent deploys, you will just need to perform this step - step 7</p>

<p><strong>Tips</strong>: On your terminal, in order to run custom command for your phoenix app, you can trigger <code>heroku run</code>. For instance, if I want to run seed file, I can type the following command from my terminal:</p>
<div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>heroku run mix run seeds.ex
</code></pre></div>
<p>This has concluded for Heroku deploy. Happy Deploying :-) </p>
]]></content>
  </entry>
  
</feed>
